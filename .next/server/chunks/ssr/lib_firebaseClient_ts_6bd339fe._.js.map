{"version":3,"sources":["turbopack:///[project]/lib/firebaseClient.ts","turbopack:///[project]/node_modules/@firebase/functions/src/serializer.ts","turbopack:///[project]/node_modules/@firebase/functions/src/constants.ts","turbopack:///[project]/node_modules/@firebase/functions/src/error.ts","turbopack:///[project]/node_modules/@firebase/functions/src/context.ts","turbopack:///[project]/node_modules/@firebase/functions/src/service.ts","turbopack:///[project]/node_modules/@firebase/functions/src/config.ts","turbopack:///[project]/node_modules/@firebase/functions/src/api.ts","turbopack:///[project]/node_modules/@firebase/functions/src/index.ts"],"sourcesContent":["// lib/firebaseClient.ts\r\nimport { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";\r\nimport { getAuth, connectAuthEmulator } from \"firebase/auth\";\r\nimport { getFirestore, connectFirestoreEmulator } from \"firebase/firestore\";\r\nimport { getStorage, connectStorageEmulator } from \"firebase/storage\";\r\nimport { getFunctions, connectFunctionsEmulator } from \"firebase/functions\";\r\n\r\n// --- אבחון: ודא שמשתני הסביבה קיימים (גם בשרת של Next וגם בדפדפן) ---\r\nconst cfg = {\r\n  apiKey: process.env.NEXT_PUBLIC_FB_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FB_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FB_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FB_STORAGE_BUCKET,\r\n  appId: process.env.NEXT_PUBLIC_FB_APP_ID,\r\n};\r\n\r\n// נבדוק את כל המפתחות החיוניים ונזרוק שגיאה ברורה אם חסר משהו:\r\nconst missing = Object.entries(cfg).filter(([_, v]) => !v).map(([k]) => k);\r\nif (missing.length) {\r\n  // חשוב: ההודעה תופיע במסוף וגם תעצור את הייבוא בצורה ברורה\r\n  throw new Error(\r\n    \"Firebase env missing: \" + missing.join(\", \") +\r\n    \". ודא שיש קובץ .env.local בשורש הפרויקט עם NEXT_PUBLIC_FB_* אמיתיים, ואתחל מחדש את dev.\"\r\n  );\r\n}\r\n\r\nconst firebaseConfig = cfg as {\r\n  apiKey: string; authDomain: string; projectId: string; storageBucket: string; appId: string;\r\n};\r\n\r\nlet app: FirebaseApp;\r\ntry {\r\n  app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\n} catch (e) {\r\n  // לוג מועיל לאבחון\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"Firebase initializeApp failed. projectId:\", firebaseConfig.projectId, e);\r\n  throw e;\r\n}\r\n\r\nexport { app };\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const storage = getStorage(app);\r\nexport const functions = getFunctions(app);\r\n\r\n\r\n// חיבור לאמולטורים בלוקאל\r\nif (typeof window !== \"undefined\" && location.hostname === \"localhost\") {\r\n  try { connectAuthEmulator(auth, \"http://localhost:9099\"); } catch {}\r\n  try { connectFirestoreEmulator(db, \"localhost\", 8080); } catch {}\r\n  try { connectStorageEmulator(storage, \"localhost\", 9199); } catch {}\r\n  try { connectFunctionsEmulator(functions, \"localhost\", 5001); } catch {}\r\n}\r\n\r\n\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nexport function encode(data: unknown): unknown {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data!, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nexport function decode(json: unknown): unknown {\n  if (json == null) {\n    return json;\n  }\n  if ((json as { [key: string]: unknown })['@type']) {\n    switch ((json as { [key: string]: unknown })['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE: {\n        // Technically, this could work return a valid number for malformed\n        // data if there was a number followed by garbage. But it's just not\n        // worth all the extra code to detect that case.\n        const value = Number((json as { [key: string]: unknown })['value']);\n        if (isNaN(value)) {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n        return value;\n      }\n      default: {\n        throw new Error('Data cannot be decoded from JSON: ' + json);\n      }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json!, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Functions.\n */\nexport const FUNCTIONS_TYPE = 'functions';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FunctionsErrorCodeCore as FunctionsErrorCode } from './public-types';\nimport { decode } from './serializer';\nimport { HttpResponseBody } from './service';\nimport { FirebaseError } from '@firebase/util';\nimport { FUNCTIONS_TYPE } from './constants';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An error returned by the Firebase Functions client SDK.\n *\n * See {@link FunctionsErrorCode} for full documentation of codes.\n *\n * @public\n */\nexport class FunctionsError extends FirebaseError {\n  /**\n   * Constructs a new instance of the `FunctionsError` class.\n   */\n  constructor(\n    /**\n     * A standard error code that will be returned to the client. This also\n     * determines the HTTP status code of the response, as defined in code.proto.\n     */\n    code: FunctionsErrorCode,\n    message?: string,\n    /**\n     * Additional details to be converted to JSON and included in the error response.\n     */\n    readonly details?: unknown\n  ) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n\n    // Since the FirebaseError constructor sets the prototype of `this` to FirebaseError.prototype,\n    // we also have to do it in all subclasses to allow for correct `instanceof` checks.\n    Object.setPrototypeOf(this, FunctionsError.prototype);\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new FunctionsError(code, description, details);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from '@firebase/component';\nimport { _isFirebaseServerApp, FirebaseApp } from '@firebase/app';\nimport {\n  AppCheckInternalComponentName,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  MessagingInternal,\n  MessagingInternalComponentName\n} from '@firebase/messaging-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\n\n/**\n * The metadata that should be supplied with function calls.\n * @internal\n */\nexport interface Context {\n  authToken?: string;\n  messagingToken?: string;\n  appCheckToken: string | null;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: MessagingInternal | null = null;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  private serverAppAppCheckToken: string | null = null;\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    if (_isFirebaseServerApp(app) && app.settings.appCheckToken) {\n      this.serverAppAppCheckToken = app.settings.appCheckToken;\n    }\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(\n        appCheck => (this.appCheck = appCheck),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      return token?.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getMessagingToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getAppCheckToken(\n    limitedUseAppCheckTokens?: boolean\n  ): Promise<string | null> {\n    if (this.serverAppAppCheckToken) {\n      return this.serverAppAppCheckToken;\n    }\n    if (this.appCheck) {\n      const result = limitedUseAppCheckTokens\n        ? await this.appCheck.getLimitedUseToken()\n        : await this.appCheck.getToken();\n      if (result.error) {\n        // Do not send the App Check header to the functions endpoint if\n        // there was an error from the App Check exchange endpoint. The App\n        // Check SDK will already have logged the error to console.\n        return null;\n      }\n      return result.token;\n    }\n    return null;\n  }\n\n  async getContext(limitedUseAppCheckTokens?: boolean): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    const appCheckToken = await this.getAppCheckToken(limitedUseAppCheckTokens);\n    return { authToken, messagingToken, appCheckToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport {\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableStreamResult,\n  HttpsCallableOptions,\n  HttpsCallableStreamOptions\n} from './public-types';\nimport { _errorForResponse, FunctionsError } from './error';\nimport { ContextProvider } from './context';\nimport { encode, decode } from './serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  isCloudWorkstation,\n  pingServer,\n  updateEmulatorBanner\n} from '@firebase/util';\n\nexport const DEFAULT_REGION = 'us-central1';\n\nconst responseLineRE = /^data: (.*?)(?:\\n|$)/;\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\ninterface CancellablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis: number): CancellablePromise<never> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timer: any | null = null;\n  return {\n    promise: new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nexport class FunctionsService implements _FirebaseService {\n  readonly contextProvider: ContextProvider;\n  emulatorOrigin: string | null = null;\n  cancelAllRequests: Promise<void>;\n  deleteService!: () => Promise<void>;\n  region: string;\n  customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>,\n    regionOrCustomDomain: string = DEFAULT_REGION,\n    readonly fetchImpl: typeof fetch = (...args) => fetch(...args)\n  ) {\n    this.contextProvider = new ContextProvider(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider\n    );\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain =\n        url.origin + (url.pathname === '/' ? '' : url.pathname);\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n\n  _delete(): Promise<void> {\n    return this.deleteService();\n  }\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name: string): string {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: FunctionsService,\n  host: string,\n  port: number\n): void {\n  const useSsl = isCloudWorkstation(host);\n  functionsInstance.emulatorOrigin = `http${\n    useSsl ? 's' : ''\n  }://${host}:${port}`;\n  // Workaround to get cookies in Firebase Studio\n  if (useSsl) {\n    void pingServer(functionsInstance.emulatorOrigin + '/backends');\n    updateEmulatorBanner('Functions', true);\n  }\n}\n\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData, ResponseData, StreamData = unknown>(\n  functionsInstance: FunctionsService,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  const callable = (\n    data?: RequestData | null\n  ): Promise<HttpsCallableResult> => {\n    return call(functionsInstance, name, data, options || {});\n  };\n\n  callable.stream = (\n    data?: RequestData | null,\n    options?: HttpsCallableStreamOptions\n  ) => {\n    return stream(functionsInstance, name, data, options);\n  };\n\n  return callable as HttpsCallable<RequestData, ResponseData, StreamData>;\n}\n\n/**\n * Returns a reference to the callable https trigger with the given url.\n * @param url - The url of the trigger.\n * @public\n */\nexport function httpsCallableFromURL<\n  RequestData,\n  ResponseData,\n  StreamData = unknown\n>(\n  functionsInstance: FunctionsService,\n  url: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  const callable = (\n    data?: RequestData | null\n  ): Promise<HttpsCallableResult> => {\n    return callAtURL(functionsInstance, url, data, options || {});\n  };\n\n  callable.stream = (\n    data?: RequestData | null,\n    options?: HttpsCallableStreamOptions\n  ) => {\n    return streamAtURL(functionsInstance, url, data, options || {});\n  };\n  return callable as HttpsCallable<RequestData, ResponseData, StreamData>;\n}\n\nfunction getCredentials(\n  functionsInstance: FunctionsService\n): 'include' | undefined {\n  return functionsInstance.emulatorOrigin &&\n    isCloudWorkstation(functionsInstance.emulatorOrigin)\n    ? 'include'\n    : undefined;\n}\n\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @param functionsInstance functions instance that is calling postJSON\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(\n  url: string,\n  body: unknown,\n  headers: { [key: string]: string },\n  fetchImpl: typeof fetch,\n  functionsInstance: FunctionsService\n): Promise<HttpResponse> {\n  headers['Content-Type'] = 'application/json';\n\n  let response: Response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers,\n      credentials: getCredentials(functionsInstance)\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json: HttpResponseBody | null = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n\n/**\n * Creates authorization headers for Firebase Functions requests.\n * @param functionsInstance The Firebase Functions service instance.\n * @param options Options for the callable function, including AppCheck token settings.\n * @return A Promise that resolves a headers map to include in outgoing fetch request.\n */\nasync function makeAuthHeaders(\n  functionsInstance: FunctionsService,\n  options: HttpsCallableOptions\n): Promise<Record<string, string>> {\n  const headers: Record<string, string> = {};\n  const context = await functionsInstance.contextProvider.getContext(\n    options.limitedUseAppCheckTokens\n  );\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n  if (context.appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = context.appCheckToken;\n  }\n  return headers;\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nfunction call(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  const url = functionsInstance._url(name);\n  return callAtURL(functionsInstance, url, data, options);\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nasync function callAtURL(\n  functionsInstance: FunctionsService,\n  url: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n\n  const failAfterHandle = failAfter(timeout);\n  const response = await Promise.race([\n    postJSON(\n      url,\n      body,\n      headers,\n      functionsInstance.fetchImpl,\n      functionsInstance\n    ),\n    failAfterHandle.promise,\n    functionsInstance.cancelAllRequests\n  ]);\n\n  // Always clear the failAfter timeout\n  failAfterHandle.cancel();\n\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError(\n      'cancelled',\n      'Firebase Functions instance was deleted.'\n    );\n  }\n\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n\n  return { data: decodedData };\n}\n\n/**\n * Calls a callable function asynchronously and returns a streaming result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nfunction stream(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options?: HttpsCallableStreamOptions\n): Promise<HttpsCallableStreamResult> {\n  const url = functionsInstance._url(name);\n  return streamAtURL(functionsInstance, url, data, options || {});\n}\n\n/**\n * Calls a callable function asynchronously and return a streaming result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nasync function streamAtURL(\n  functionsInstance: FunctionsService,\n  url: string,\n  data: unknown,\n  options: HttpsCallableStreamOptions\n): Promise<HttpsCallableStreamResult> {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n  //\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n  headers['Content-Type'] = 'application/json';\n  headers['Accept'] = 'text/event-stream';\n\n  let response: Response;\n  try {\n    response = await functionsInstance.fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers,\n      signal: options?.signal,\n      credentials: getCredentials(functionsInstance)\n    });\n  } catch (e) {\n    if (e instanceof Error && e.name === 'AbortError') {\n      const error = new FunctionsError('cancelled', 'Request was cancelled.');\n      return {\n        data: Promise.reject(error),\n        stream: {\n          [Symbol.asyncIterator]() {\n            return {\n              next() {\n                return Promise.reject(error);\n              }\n            };\n          }\n        }\n      };\n    }\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    const error = _errorForResponse(0, null);\n    return {\n      data: Promise.reject(error),\n      // Return an empty async iterator\n      stream: {\n        [Symbol.asyncIterator]() {\n          return {\n            next() {\n              return Promise.reject(error);\n            }\n          };\n        }\n      }\n    };\n  }\n  let resultResolver: (value: unknown) => void;\n  let resultRejecter: (reason: unknown) => void;\n  const resultPromise = new Promise<unknown>((resolve, reject) => {\n    resultResolver = resolve;\n    resultRejecter = reject;\n  });\n  options?.signal?.addEventListener('abort', () => {\n    const error = new FunctionsError('cancelled', 'Request was cancelled.');\n    resultRejecter(error);\n  });\n  const reader = response.body!.getReader();\n  const rstream = createResponseStream(\n    reader,\n    resultResolver!,\n    resultRejecter!,\n    options?.signal\n  );\n  return {\n    stream: {\n      [Symbol.asyncIterator]() {\n        const rreader = rstream.getReader();\n        return {\n          async next() {\n            const { value, done } = await rreader.read();\n            return { value: value as unknown, done };\n          },\n          async return() {\n            await rreader.cancel();\n            return { done: true, value: undefined };\n          }\n        };\n      }\n    },\n    data: resultPromise\n  };\n}\n\n/**\n * Creates a ReadableStream that processes a streaming response from a streaming\n * callable function that returns data in server-sent event format.\n *\n * @param reader The underlying reader providing raw response data\n * @param resultResolver Callback to resolve the final result when received\n * @param resultRejecter Callback to reject with an error if encountered\n * @param signal Optional AbortSignal to cancel the stream processing\n * @returns A ReadableStream that emits decoded messages from the response\n *\n * The returned ReadableStream:\n *   1. Emits individual messages when \"message\" data is received\n *   2. Resolves with the final result when a \"result\" message is received\n *   3. Rejects with an error if an \"error\" message is received\n */\nfunction createResponseStream(\n  reader: ReadableStreamDefaultReader<Uint8Array>,\n  resultResolver: (value: unknown) => void,\n  resultRejecter: (reason: unknown) => void,\n  signal?: AbortSignal\n): ReadableStream<unknown> {\n  const processLine = (\n    line: string,\n    controller: ReadableStreamDefaultController\n  ): void => {\n    const match = line.match(responseLineRE);\n    // ignore all other lines (newline, comments, etc.)\n    if (!match) {\n      return;\n    }\n    const data = match[1];\n    try {\n      const jsonData = JSON.parse(data);\n      if ('result' in jsonData) {\n        resultResolver(decode(jsonData.result));\n        return;\n      }\n      if ('message' in jsonData) {\n        controller.enqueue(decode(jsonData.message));\n        return;\n      }\n      if ('error' in jsonData) {\n        const error = _errorForResponse(0, jsonData);\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n    } catch (error) {\n      if (error instanceof FunctionsError) {\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n      // ignore other parsing errors\n    }\n  };\n\n  const decoder = new TextDecoder();\n  return new ReadableStream({\n    start(controller) {\n      let currentText = '';\n      return pump();\n      async function pump(): Promise<void> {\n        if (signal?.aborted) {\n          const error = new FunctionsError(\n            'cancelled',\n            'Request was cancelled'\n          );\n          controller.error(error);\n          resultRejecter(error);\n          return Promise.resolve();\n        }\n        try {\n          const { value, done } = await reader.read();\n          if (done) {\n            if (currentText.trim()) {\n              processLine(currentText.trim(), controller);\n            }\n            controller.close();\n            return;\n          }\n          if (signal?.aborted) {\n            const error = new FunctionsError(\n              'cancelled',\n              'Request was cancelled'\n            );\n            controller.error(error);\n            resultRejecter(error);\n            await reader.cancel();\n            return;\n          }\n          currentText += decoder.decode(value, { stream: true });\n          const lines = currentText.split('\\n');\n          currentText = lines.pop() || '';\n          for (const line of lines) {\n            if (line.trim()) {\n              processLine(line.trim(), controller);\n            }\n          }\n          return pump();\n        } catch (error) {\n          const functionsError =\n            error instanceof FunctionsError\n              ? error\n              : _errorForResponse(0, null);\n          controller.error(functionsError);\n          resultRejecter(functionsError);\n        }\n      }\n    },\n    cancel() {\n      return reader.cancel();\n    }\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactory\n} from '@firebase/component';\nimport { FUNCTIONS_TYPE } from './constants';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { name, version } from '../package.json';\n\nconst AUTH_INTERNAL_NAME: FirebaseAuthInternalName = 'auth-internal';\nconst APP_CHECK_INTERNAL_NAME: AppCheckInternalComponentName =\n  'app-check-internal';\nconst MESSAGING_INTERNAL_NAME: MessagingInternalComponentName =\n  'messaging-internal';\n\nexport function registerFunctions(variant?: string): void {\n  const factory: InstanceFactory<'functions'> = (\n    container: ComponentContainer,\n    { instanceIdentifier: regionOrCustomDomain }\n  ) => {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider,\n      regionOrCustomDomain\n    );\n  };\n\n  _registerComponent(\n    new Component(\n      FUNCTIONS_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm, cjs, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\nimport { FUNCTIONS_TYPE } from './constants';\n\nimport { Provider } from '@firebase/component';\nimport { Functions, HttpsCallableOptions, HttpsCallable } from './public-types';\nimport {\n  FunctionsService,\n  DEFAULT_REGION,\n  connectFunctionsEmulator as _connectFunctionsEmulator,\n  httpsCallable as _httpsCallable,\n  httpsCallableFromURL as _httpsCallableFromURL\n} from './service';\nimport {\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nexport { FunctionsError } from './error';\nexport * from './public-types';\n\n/**\n * Returns a {@link Functions} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nexport function getFunctions(\n  app: FirebaseApp = getApp(),\n  regionOrCustomDomain: string = DEFAULT_REGION\n): Functions {\n  // Dependencies\n  const functionsProvider: Provider<'functions'> = _getProvider(\n    getModularInstance(app),\n    FUNCTIONS_TYPE\n  );\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('functions');\n  if (emulator) {\n    connectFunctionsEmulator(functionsInstance, ...emulator);\n  }\n  return functionsInstance;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: Functions,\n  host: string,\n  port: number\n): void {\n  _connectFunctionsEmulator(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    host,\n    port\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<\n  RequestData = unknown,\n  ResponseData = unknown,\n  StreamData = unknown\n>(\n  functionsInstance: Functions,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  return _httpsCallable<RequestData, ResponseData, StreamData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    name,\n    options\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the specified url.\n * @param url - The url of the trigger.\n * @public\n */\nexport function httpsCallableFromURL<\n  RequestData = unknown,\n  ResponseData = unknown,\n  StreamData = unknown\n>(\n  functionsInstance: Functions,\n  url: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  return _httpsCallableFromURL<RequestData, ResponseData, StreamData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    url,\n    options\n  );\n}\n","/**\n * Cloud Functions for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerFunctions } from './config';\n\nexport * from './api';\nexport * from './public-types';\n\nregisterFunctions();\n"],"names":["connectFunctionsEmulator","httpsCallable","httpsCallableFromURL","_connectFunctionsEmulator","_httpsCallable","_httpsCallableFromURL"],"mappings":"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","ignoreList":[1,2,3,4,5,6,7,8]}